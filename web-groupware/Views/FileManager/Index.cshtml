@{
    ViewData["Title"] = "ファイル管理";
}

@model web_groupware.Models.FileDetailViewModel

<div class="row">
    <div class="col-12">
        <div class="page-title-box page-title-box-alt">
            <h4 class="page-title">ファイル管理</h4>
        </div>
    </div>
</div>   
<div class="card" style="padding-top:25px">
    <div class="card-body">
        @using (Html.BeginForm("Create", "FileManager", FormMethod.Post, new { enctype = "multipart/form-data", id="fileForm" }))
        {
            <div class="row">
                <div class="col-12">
                    <a class="fileupload btn btn-success waves-effect waves-light" style="float:right" onclick="createFolder()">
                        <i class="mdi mdi-folder-outline me-1"></i>新規フォルダ
                    </a>
                </div>
            </div>
            <div class="row">
                <div class="col-12 card dropArea border-0 p-2">
                    <div class="text-center px-3 py-3 border-primary" style="border:dashed!important;" id="fileArea">
                        <a class="fileupload btn btn-success waves-effect waves-light" onclick="handleSelectFile()">
                            選択
                            <input type="file" class="upload" name="fileList" multiple onchange="handleSubmit(this)" >
                        </a>
                        <input type="hidden" name="currentDirectory">
                        <span>ファイルをドラッグ＆ドロップしてください</span>
                    </div>
                    <div id="message_file1" class="text-right"></div>
                </div>
            </div>

        }
        <span>currentDirectory:</span>
        <span id="currentDirectory"></span>
        <table class="table table-centered  table-nowrap mb-0">
            <thead class="table-light">
                <tr>
                    <th scope="col"><input type="checkbox" id="selectAllFile"/></th>
                    <th scope="col">ファイル/フォルダ名</th>
                    <th scope="col">最終更新者</th>
                    <th scope="col">最終更新日時</th>
                    <th scope="col">
                        <ul class="list-inline table-action m-0">
                            <li class="list-inline-item">
                                <a href="javascript:void(0)" class="action-button px-1 disabled" title="名前変更" id="rename-file" onclick="rename()">
                                    <i class="mdi mdi-pencil"></i>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <a href="javascript:void(0);" class="action-button px-1 disabled" title="移動" id="move-file" onclick="move()">
                                    <i class="mdi mdi-file-move-outline disable"></i>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <a href="javascript:void(0);" class="action-button px-1 disabled"  title="削除" id="delete-file" onclick="deleteFile()">
                                    <i class="mdi mdi-delete"></i>
                                </a>
                            </li>
                            <li class="list-inline-item">
                                <a href="javascript:void(0);" class="action-button px-1 disabled" title="ダウンロード" id="download-file" onclick="downloadFile()">
                                    <i class="mdi mdi-download"></i>
                                </a>
                            </li>
                        </ul>
                    </th>
                </tr>
            </thead>
            <tbody>
                    @if(Model.fileList != null)
                    @foreach(var item in Model.fileList)
                    {
                        <tr>
                            <td>
                                <input type="checkbox" class="selectFile" value="@item.file_no">
                            </td>
                            <td>
                                @if (@item.icon != "")
                                {
                                    <img src="~/images/file-icons/@item.icon" height="30" alt="icon" class="me-2">
                                }
                                @if (@item.type == 1)
                                {
                                    <a href="javascript:void(0);" class="text-dark folder" >@item.name</a>
                                }
                                else
                                {
                                    <a href="javascript:void(0);" class="text-dark">@item.name</a>
                                }
                            </td>
                            <td class="font-13">@item.update_user</td>
                            <td class="font-13">@item.update_date</td>
                            <td></td>
                        </tr>
                    }
            </tbody>
        </table>
        <!-- Modal to create, rename folder -->
        <div class="modal fade" id="folder-modal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header py-3 px-4 border-bottom-0 d-block">
                        <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h5 class="modal-title"></h5>
                    </div>
                    <div class="modal-body px-4 pb-4 pt-0">
                        <form class="needs-validation" name="folder-form" id="form-folder" novalidate>
                            <input type="text" name="id" id="folder-id" hidden />                            
                            <div class="row">
                                <div class="col-12">
                                    <div class="mb-2">
                                        <label class="control-label form-label"></label>
                                        <input class="form-control" type="text" name="title" id="folder-name" required />
                                        <div class="invalid-feedback">ファイルやフォルダ名をご入力ください。</div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <button type="button" class="btn btn-light me-1" data-bs-dismiss="modal">キャンセル</button>
                                </div>
                                <div class="col-6 text-end">
                                    <button type="submit" class="btn btn-success">保存</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div> <!-- end modal-content-->
            </div> <!-- end modal dialog-->
        </div>
        <!-- end modal-->   
        
        <!-- Modal to move file or folder -->
        <div class="modal fade" id="move-modal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header py-3 px-4 border-bottom-0 d-block">
                        <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h5 class="modal-title"></h5>
                    </div>
                    <div class="modal-body px-4 pb-4 pt-0">
                        <form class="needs-validation" name="move-form" id="form-move" novalidate>
                            <div class="mt-2">
                                <label class="control-label form-label"></label>
                                <select class="col-12" style="padding: 8px" required>
                                </select>
                            </div>
                            <div class="row mt-2">
                                <div class="col-6">
                                    <button type="button" class="btn btn-light me-1" data-bs-dismiss="modal">キャンセル</button>
                                </div>
                                <div class="col-6 text-end">
                                    <button type="submit" class="btn btn-success">移動</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div> <!-- end modal-content-->
            </div> <!-- end modal dialog-->
        </div>
        <!-- end modal-->

        <!-- Modal to delete file or folder -->
        <div class="modal fade" id="delete-modal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header py-3 px-4 border-bottom-0 d-block">
                        <button type="button" class="btn-close float-end" data-bs-dismiss="modal" aria-label="Close"></button>
                        <h5 class="modal-title"></h5>
                    </div>
                    <div class="modal-body px-4 pb-4 pt-0">
                        <div class="row mt-2">
                            <div class="col-6">
                                <button type="button" class="btn btn-light me-1" data-bs-dismiss="modal">キャンセル</button>
                            </div>
                            <div class="col-6 text-end">
                                <button type="button" class="btn btn-danger" id="deleteFile">削除</button>
                            </div>
                        </div>
                    </div>
                </div> <!-- end modal-content-->
            </div> <!-- end modal dialog-->
        </div>
        <!-- end modal-->
    </div>
</div>

@section Scripts {
    <script>
        var selectedFileList = [];
        var url = decodeURIComponent(window.location.href);
        var currentDirectory = url.split('groupware/FileManager')[1];
        if (currentDirectory == '' || currentDirectory == '/') {
            currentDirectory = '共有フォルダ';
        }
        else {
            currentDirectory = currentDirectory.substring(1);
        }
        if (currentDirectory.endsWith('/')) {
            currentDirectory = currentDirectory.slice(0, -1);
        }
        $('input[name=currentDirectory]').val(currentDirectory);

        var directoryList = currentDirectory.split('/');
        if (directoryList.indexOf('共有フォルダ') == -1) {
            directoryList.unshift('共有フォルダ');
        }
        for(let i = 0; i < directoryList.length; i++) {
            var directory = "";
            for (let j = 0; j <= i; j++) {
                directory = directory.concat(`${directoryList[j]}/`);
            }
            directory = directory.replace('共有フォルダ/', '');
            $('span#currentDirectory').append(
                `<span>
                    <a href="@Url.Action("Index", "FileManager", new { folder = ""})/${directory}">
                        ${directoryList[i]}
                    </a>
                </span>
                <span> / </span>
                `
            );
        }

        function handleSubmit(file) {
            if (file.files.length > 0) {
                $('#fileForm').submit();
            }
        }    
        function downloadFile()
        {
            $.ajax({
                method: "post",
                url: '@Url.Action("DownloadFile", "FileManager")',
                data: {
                    fileNoList: selectedFileList
                },
                success: function (result) {
                    window.location.href = url.split('groupware/FileManager')[0] + 'groupware/downloads/Groupware.zip';
                },
                error: function (xhr) {
                    alert("Error:" + xhr.responseText);
                }
            });
        }
        function createFolder()
        {
            $('#folder-modal .modal-title').text("フォルダを作成する");
            $('#folder-id').val(0);
            $('#folder-name').val("");
            $('#folder-modal .control-label').text("フォルダ");

            var myModal = new bootstrap.Modal(document.getElementById('folder-modal'), {});
            myModal.toggle();
        }
        function rename()
        {
            $('#folder-modal .modal-title').text("名の変更");
            $('#folder-id').val(selectedFileList[0]);
            var name = $(`input[value="${selectedFileList[0]}"]`).parent().parent().find('td:eq(1)').find('a').text();
            $('#folder-name').val(name);

            var myModal = new bootstrap.Modal(document.getElementById('folder-modal'), {});
            myModal.toggle();
        }
        function move()
        {
            $('#move-modal .modal-title').text("移動先フォルダを選択し「移動」をクリックしてください");
            $('#move-modal .control-label').text("フォルダ");
            $.ajax({
                method: "post",
                url: '@Url.Action("FindFolderToMove", "FileManager")',
                data: {
                    fileNoList: selectedFileList
                },
                success: function (result) {
                    $('#form-move select').append(
                        '<option value="">-- 移動先フォルダを選択してください --</option>'
                    )
                    for (var folder of result) {
                        $('#form-move select').append(
                            `<option value=${folder}>${folder}`
                        );
                    }
                    var myModal = new bootstrap.Modal(document.getElementById('move-modal'), {});
                    myModal.toggle();
                },
                error: function (xhr) {
                    alert("Error: " + xhr.responseText);
                }
            });

        }
        function deleteFile() 
        {
            $('#delete-modal .modal-title').text("削除してもよろしいですか？");

            var myModal = new bootstrap.Modal(document.getElementById('delete-modal'), {});
            myModal.toggle();
        }
        function checkActionValidity(selectedFileList)
        {
            if(selectedFileList.length == 0) {
                $('a.action-button').addClass('disabled');
            }
            else {
                $('a.action-button').removeClass('disabled');
                if(selectedFileList.length > 1) {
                    $('a#rename-file').addClass('disabled');
                }
            }
        }
        function handleSelectFile() 
        { 
            $('input[type="file"]').click();
        }
        $("#form-folder").on('submit', function(e) {
            e.preventDefault();
            var id = $('#folder-id').val();
            var newname = $('#folder-name').val();

            var form = $("#form-folder")[0];
            if (form.checkValidity()) {
                $.ajax({
                    method: "post",
                    url: id == 0 ? '@Url.Action("CreateFolder", "FileManager")' : '@Url.Action("Update", "FileManager")',
                    data: {
                        id: id,
                        newName: newname,
                        currentDirectory: currentDirectory
                    },
                    success: function(result) {
                        window.location.reload();
                    },
                    error: function(xhr) {
                        alert("Error: " + xhr.responseText);
                    }
                });     
                $('#folder-modal').modal('hide');
            } else {
                e.stopPropagation();
                form.classList.add('was-validated');
            }
        });
        $('#form-move').on('submit', function (e) {
            e.preventDefault();
            var form = $('#form-move')[0];
            if (form.checkValidity()) {
                var destinationFolder = $('#form-move select').val();
                $.ajax({
                    method: "post",
                    url: '@Url.Action("MoveToFolder", "FileManager")',
                    data: {
                        destinationFolder: destinationFolder,
                        fileNoList: selectedFileList
                    },
                    success: function (result) {
                        window.location.reload();
                    },
                    error: function (xhr) {
                        alert("Error:" + xhr.responseText);
                    }
                });
            }
        });
        $('#deleteFile').on('click', function () {
            $.ajax({
                method: "post",
                url: '@Url.Action("Delete", "FileManager")',
                data: {
                    fileNoList: selectedFileList
                },
                success: function (result) {
                    window.location.reload();
                },
                error: function (xhr) {
                    alert("Error:" + xhr.responseText);
                }
            });
        });
        $('a.folder').on({
            click: function () {
                if (url.endsWith('/')) {
                    url = url.slice(0, -1);
                }
                window.location.href = `${url}/${$(this).text()}`;
            }
        });
        $('input.selectFile').on({
            change: function () {
                var id = parseInt($(this).val());
                if ($(this).is(':checked')) {
                    selectedFileList.push(id);
                }
                else {
                    selectedFileList.splice(selectedFileList.indexOf(id), 1);
                }
                checkActionValidity(selectedFileList);
            }
        });
        $('input#selectAllFile').on({
            change: function () {
                if ($(this).is(':checked')) {
                    $('input.selectFile').prop('checked', true);
                    selectedFileList = [];
                    @foreach (var item in Model.fileList)
                    {
                        @:selectedFileList.push(@item.file_no);
                    }
                }
                else {
                    $('input.selectFile').prop('checked', false);
                    selectedFileList = [];
                }
                checkActionValidity(selectedFileList);
            }
        });
        $('#move-modal').on('hidden.bs.modal', function () {
            $('#form-move select').text('');
        });
        $(document).on({
            dragover: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            dragenter: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            drop: function (e) {
                e.stopPropagation();
                e.preventDefault();
            }
        });
        $('div#fileArea').on({
            dragover: function (e) {
                e.stopPropagation();
                e.preventDefault();
            },
            dragenter: function (e) {
                e.stopPropagation();
                e.preventDefault();
                $('div#fileArea').css('background', '#ceffce');
            },
            drop: function (e) {
                e.stopPropagation();
                e.preventDefault();
                $('input[type="file"]').prop('files', e.originalEvent.dataTransfer.files);
                handleSubmit(document.querySelector('input[type="file"]'));
            }
        });
    </script>
}